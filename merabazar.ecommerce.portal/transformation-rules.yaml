version: 1
transformations:
  paths:
    include:
      - "src/main/java/**"
      - "src/test/java/**"
      - "src/main/resources/**"
      - "src/main/webapp/**"
    exclude:
      - "**/generated/**"
      - "**/target/**"
      - "**/.git/**"
      - "**/build/**"

  # Transform endpoint configuration
  transform:
    endpoint: "/transform"
    enabled: true
    options:
      validateOnly: false
      generateDiff: true
      applyChanges: true

  rules:
    # Java version configuration
    java:
      sourceVersion: "8"
      targetVersion: "21"
      enablePreview: false
      features:
        enable:
          - "VAR_SYNTAX"
          - "SWITCH_EXPRESSIONS"
          - "TEXT_BLOCKS"
          - "PATTERN_MATCHING"
          - "RECORDS"
          - "SEALED_CLASSES"
          - "VIRTUAL_THREADS"
          - "STRING_TEMPLATES"
        refactor:
          - "ANONYMOUS_TO_LAMBDA"
          - "RAW_TYPES_TO_GENERICS"
          - "EXPLICIT_TYPES_TO_VAR"
          - "FOR_TO_FOREACH"

    # Spring Framework to Spring Boot 3 migration
    frameworks:
      spring:
        boot:
          enabled: true
          version: "3.2.0"
          features:
            - "AUTOCONFIGURATION"
            - "SPRING_BOOT_APPLICATION"
            - "YAML_CONFIGURATION"
        framework:
          enabled: true
          sourceVersion: "4.x"
          targetVersion: "6.x"
          migrationPatterns:
            - from: "@EnableWebMvc"
              to: "@SpringBootApplication"
            - from: "web.xml"
              to: "WebApplicationInitializer"
            - from: "XmlWebApplicationContext"
              to: "AnnotationConfigWebApplicationContext"

    # Dependencies update rules
    dependencies:
      updates:
        - groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-parent"
          version: "3.2.0"
        - groupId: "org.springframework"
          artifactId: "spring-*"
          version: "6.1.0"
        - groupId: "jakarta.persistence"
          artifactId: "jakarta.persistence-api"
          version: "3.1.0"
        - groupId: "org.hibernate.orm"
          artifactId: "hibernate-core"
          version: "6.3.0.Final"
        - groupId: "org.springframework.security"
          artifactId: "spring-security-*"
          version: "6.1.0"
        - groupId: "com.mysql"
          artifactId: "mysql-connector-j"
          version: "8.0.33"
        - groupId: "org.apache.commons"
          artifactId: "commons-collections4"
          version: "4.4"
        - groupId: "org.apache.logging.log4j"
          artifactId: "log4j-slf4j-impl"
          version: "2.20.0"
        - groupId: "org.junit.jupiter"
          artifactId: "junit-jupiter"
          version: "5.10.0"
      remove:
        - groupId: "commons-collections"
          artifactId: "commons-collections"
        - groupId: "javax.persistence"
          artifactId: "javax.persistence-api"
        - groupId: "javax.ws.rs"
          artifactId: "javax.ws.rs-api"
        - groupId: "junit"
          artifactId: "junit"
        - groupId: "log4j"
          artifactId: "log4j"
        - groupId: "mysql"
          artifactId: "mysql-connector-java"
        - groupId: "org.hibernate"
          artifactId: "hibernate-core"
        - groupId: "org.hibernate"
          artifactId: "hibernate-entitymanager"
        - groupId: "org.slf4j"
          artifactId: "slf4j-log4j12"

    # Package and import replacements
    replacements:
      - pattern: "javax.persistence"
        replacement: "jakarta.persistence"
      - pattern: "javax.validation"
        replacement: "jakarta.validation"
      - pattern: "javax.servlet"
        replacement: "jakarta.servlet"
      - pattern: "javax.ws.rs"
        replacement: "jakarta.ws.rs"
      - pattern: "javax.annotation"
        replacement: "jakarta.annotation"
      - pattern: "javax.xml.bind"
        replacement: "jakarta.xml.bind"
      - pattern: "org.springframework.orm.hibernate4"
        replacement: "org.springframework.orm.hibernate5"
      - pattern: "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter"
        replacement: "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
      - pattern: "org.springframework.boot.web.support"
        replacement: "org.springframework.boot.web.servlet.support"
      - pattern: "org.springframework.boot.context.embedded"
        replacement: "org.springframework.boot.web.servlet.server"

    # Code pattern transformations
    codePatterns:
      - pattern: "public class ${className} extends WebMvcConfigurerAdapter"
        replacement: "public class ${className} implements WebMvcConfigurer"
      - pattern: "new ResponseEntity<>(${body}, ${status})"
        replacement: "ResponseEntity.status(${status}).body(${body})"
      - pattern: "@RequestMapping(method = RequestMethod.${METHOD})"
        replacement: "@${METHOD}Mapping"
      - pattern: "extends WebSecurityConfigurerAdapter"
        replacement: ""
        addImport: "org.springframework.security.web.SecurityFilterChain"

    # Logging configuration
    logging:
      replace:
        - pattern: "System.out.println"
          replacement: "log.info"
        - pattern: "System.err.println"
          replacement: "log.error"
        - pattern: "org.slf4j.LoggerFactory.getLogger"
          replacement: "@Slf4j"
          addImport: "lombok.extern.slf4j.Slf4j"

    # Post-transformation tasks
    postTransformation:
      - addDependency:
          groupId: "org.projectlombok"
          artifactId: "lombok"
          version: "1.18.30"
          scope: "provided"
      - addDependency:
          groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-web"
      - addDependency:
          groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-data-jpa"
      - addDependency:
          groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-validation"
      - addDependency:
          groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-security"
      - addDependency:
          groupId: "org.springframework.boot"
          artifactId: "spring-boot-starter-test"
          scope: "test"
      - createFile:
          path: "src/main/resources/application.yml"
          content: |
            spring:
              datasource:
                url: jdbc:mysql://localhost:3306/merabazar
                username: root
                password: password
                driver-class-name: com.mysql.cj.jdbc.Driver
              jpa:
                hibernate:
                  ddl-auto: update
                show-sql: true
                properties:
                  hibernate:
                    dialect: org.hibernate.dialect.MySQLDialect
                    format_sql: true
            
            logging:
              level:
                org.springframework: INFO
                com.learnlogic: DEBUG
      - createFile:
          path: "src/main/java/com/learnlogic/ecommerce/merabazar/MerabazarApplication.java"
          content: |
            package com.learnlogic.ecommerce.merabazar;
            
            import org.springframework.boot.SpringApplication;
            import org.springframework.boot.autoconfigure.SpringBootApplication;
            
            @SpringBootApplication
            public class MerabazarApplication {
                public static void main(String[] args) {
                    SpringApplication.run(MerabazarApplication.class, args);
                }
            }

    # Preserve certain patterns if needed
    preserve:
      - pattern: "// PRESERVE"
        scope: "LINE"
      - pattern: "/* PRESERVE */"
        scope: "BLOCK"
      
    # Security configuration
    security:
      updateConfigs: true
      addSecurityHeaders: true
      csrf:
        enabled: true